name: Test Suite

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  framework-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version: [ '8.2', '8.3' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, xml, ctype, json, tokenizer, sqlite
          ini-values: memory_limit=512M
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.composer/cache
          key: php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run unit tests
        run: vendor/bin/phpunit --testsuite Unit

      - name: Run integration tests
        run: vendor/bin/phpunit --testsuite Integration

      - name: Run feature tests
        run: vendor/bin/phpunit --testsuite Feature

      - name: Run performance tests
        run: vendor/bin/phpunit --testsuite Performance

      - name: Run documentation tests
        run: vendor/bin/phpunit --testsuite Documentation

      - name: Generate coverage (HTML)
        run: vendor/bin/phpunit --coverage-html coverage

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.php-version }}
          path: coverage

  application-tests:
    runs-on: ubuntu-latest
    needs: framework-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, json, tokenizer, sqlite

      - name: Create new project from skeleton and run basic checks
        run: |
          composer create-project glueful/api test-project --prefer-source --no-interaction
          cd test-project
          php glueful --version
          php glueful system:check || true
          if composer run-script --list | grep -q "test"; then composer test || true; fi
